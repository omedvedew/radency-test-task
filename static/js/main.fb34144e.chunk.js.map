{"version":3,"sources":["App/CSVItem.js","App/Main.js","App/App.js","index.js","redux/mainReducer.js"],"names":["CSVItem","data","map","i","connect","state","dispatch","getCSVInfo","value","type","console","log","CSVInfo","forEach","item","CSVItems","join","split","setTimeout","rows","document","querySelectorAll","length","cells","textContent","includes","classList","add","slice","startsWith","toLowerCase","className","onFileLoaded","fileInfo","border","cellSpacing","cellPadding","keys","App","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb34144e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CSVItem = ({\r\n    data\r\n}) => {\r\n    return (\r\n        <>\r\n            {data.map((data, i) => (\r\n                <td key={i}>{data}</td>\r\n            ))}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CSVItem;","import React from 'react';\nimport CSVReader from 'react-csv-reader'; \nimport { connect } from 'react-redux';\nimport CSVItem from './CSVItem';\nimport { keys } from 'lodash';\n\nconst Main = ({\n  state,\n  getCSVInfo,\n}) => {\n\n  console.log(state);\n\n  // Converting data from CSV file to array.\n  state.CSVInfo ?\n  state.CSVInfo.forEach((item, i) => {\n    state.CSVItems[`item${i}`] = item.join().split(\"; \")\n  })\n  : console.log('waiting for info');\n \n  // Validating table content\n  function validateCell() {\n    let rows = document.querySelectorAll('tr');\n    console.log(rows);\n    for (let i=1; i<rows.length-1; i++) {\n      if (rows[i].cells[3].textContent.includes('@') === false) {rows[i].cells[3].classList.add(\"invalid\")};\n      if (+rows[i].cells[4].textContent <= 20) {rows[i].cells[4].classList.add(\"invalid\")};\n      if (+rows[i].cells[5].textContent > +rows[i].cells[4].textContent || +rows[i].cells[5].textContent < 0) {rows[i].cells[5].classList.add(\"invalid\")};\n      if (+rows[i].cells[6].textContent > 1000000) {rows[i].cells[6].classList.add(\"invalid\")};\n      if (+rows[i].cells[8].textContent.length > 2) {rows[i].cells[8].textContent = rows[i].cells[8].textContent.slice(0, 2)};\n      if (+rows[i].cells[2].textContent < 12 || rows[i].cells[2].textContent.startsWith(\"+1\") === false) {rows[i].cells[2].classList.add(\"invalid\")};\n      if (rows[i].cells[7].textContent.toLowerCase() === 'true' || rows[i].cells[7].textContent.toLowerCase() === 'false') {continue} else {rows[i].cells[7].classList.add(\"invalid\")};\n    };\n  };\n  setTimeout(validateCell, 500);\n\n  return (\n    <main className=\"main\">\n      <CSVReader onFileLoaded={(data, fileInfo) => getCSVInfo(data)}/>\n      \n      {\n        state.CSVInfo ?\n        <table border=\"1\" cellSpacing=\"0\" cellPadding=\"0\">\n          <tbody>\n            <tr className=\"table-heading-row\">\n              <td>ID</td>\n              <td>Name</td>\n              <td>Phone</td>\n              <td>Email</td>\n              <td>Age</td>\n              <td>Experience</td>\n              <td>Yearly Income</td>\n              <td>Has children</td>\n              <td>License States</td>\n              <td>Expiration date</td>\n              <td>License number</td>\n            </tr>\n            {keys(state.CSVItems).map((data, i) => (\n              <tr key={i}>\n                <td>{i+1}</td>\n                <CSVItem data={state.CSVItems[data]}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        : console.log('waitin for info')\n      }\n    </main>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCSVInfo: (value) => dispatch({\n    type: \"ADD_INFO_FROM_CSV\",\n    value,\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from 'react';\r\nimport Main from './Main';\r\n\r\nimport '../common/style.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"document-title\">Radency test task</h1>\r\n            <Main/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { mainReducer } from './redux/mainReducer';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App/App';\n\nconst store = createStore(\n  mainReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","export const mainReducer = (state = {\r\n    CSVItems: [],\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_INFO_FROM_CSV\": \r\n        return {\r\n            ...state,\r\n           CSVInfo: [...action.value],\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"],"sourceRoot":""}